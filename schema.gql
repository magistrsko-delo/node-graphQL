# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input InputSequenceType {
  sequenceId: Int
  name: String!
  projectId: Int!
  thumbnail: String
  status: Int
}

type MediaMetadata {
  mediaId: Int!
  name: String!
  siteName: String!
  length: Float!
  status: Float!
  thumbnail: String
  projectId: Float!
  awsBucketWholeMedia: String
  awsStorageNameWholeMedia: String
  createdAt: Float!
  updatedAt: Float!
  keywords: [String!]
}

type Mutation {
  updateProjectMetadata(projectUpdate: UpdateProjectMetadata!): ProjectMetadata!
  deleteProject(projectId: Float!): [ProjectMetadata!]!
  updateMedia(mediaData: UpdateMedia!): [MediaMetadata!]!
  manageMediaInSequence(isAdd: Boolean = false, isDelete: Boolean = false, mediaId: Float!, sequenceId: Float!): SequenceMedias!
  createSequence(newSequence: InputSequenceType!): [SequenceMetadata!]!
  updateSequence(updateSequenceData: InputSequenceType!): [SequenceMetadata!]!
  publishSequence(publishData: PublishSequenceType!): PublishSequenceRsp
}

type ProjectMetadata {
  projectId: Int!
  name: String!
  thumbnail: String!
  createdAt: Float!
  updatedAt: Float!
}

type PublishSequenceRsp {
  isPublished: Boolean!
}

input PublishSequenceType {
  sequenceId: Int!
  name: String!
  siteName: String!
}

type Query {
  projectsMetadata: [ProjectMetadata!]!
  oneProjectMetadata(projectId: Float!): ProjectMetadata
  searchMedias(status: Int = -1, mediaId: Int = -1, projectId: Int = -1): [MediaMetadata!]!
  getProjectSequences(projectId: Float!): [SequenceMetadata!]!
  getSequenceMedias(sequenceId: Float!): SequenceMedias
}

type SequenceMedias {
  sequence: SequenceMetadata
  Medias: [MediaMetadata!]!
}

type SequenceMetadata {
  sequenceId: Int!
  name: String!
  projectId: Int!
  thumbnail: String!
  status: Int!
  createdAt: Float!
  updatedAt: Float!
}

input UpdateMedia {
  mediaId: Int!
  name: String!
  siteName: String!
  length: Float!
  status: Float!
  thumbnail: String!
  projectId: Float!
  awsBucketWholeMedia: String!
  awsStorageNameWholeMedia: String!
  createdAt: Float!
}

input UpdateProjectMetadata {
  projectId: Int!
  name: String!
  thumbnail: String!
  createdAt: Float!
}
